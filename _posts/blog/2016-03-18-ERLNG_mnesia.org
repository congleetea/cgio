#+TITLE: 2016-03-18-ERLNG_mnesia.org
#+AUTHOR: Xuancong Lee 
#+EMAIL:  congleetea@gmail.com
#+DATE:  Saturday, July  9 2016 
#+OPTIONS: ^:nil
# mnesia

* ets
- ets 虽然是进程间共享的，但是也具有所有者，就是创建这个 ets 表的进程。
- ets 安全性
使用前要考虑哪些操作是安全的，哪些是不安全的。不做任何修改的单次查询(不是一段时间内的多次查询)是安全的，任何进程
都可以在任何时间点执行这些操作；其他所有会涉及到写入、更新、删除以及有一次性要求的多次读取等操作都是不安全的。ets
不支持事物，所以 *所有不安全的操作都应该在拥有者进程中执行* 。这一点要注意。


* 关于 Mnesia

Mnesia 是一个分布式数据库管理系统(Database Management System, DBMS)， 他有以下特点：

| 可以在各个节点之间配置为可复制，使各个节点的数据同步，可以实现容错。     |
| 表可以进行高度定制，速度需求可以使用内存保存，持久化需求可以保存到磁盘。 |

因此，ram_copies 类型的 mnesia 就是 ets， 而 disc_copies 类型的 mnesia 就是 dets。

* 操作

创建数据库：mnesia:create_schema([node()]),
  |
  |
启动 mnesia：ok = mnesia:start(),
  |
  |
创建表，或者复制已有的表
  |
  |
操作数据库

** 创建数据库

一个 erlang shell 创建一个就行。

mnesia:create_schema(NodeLists)    %% 这样会在 NodeLists 的所有节点都创建数据库

数据库的名字为 mnesia/node@host 命名的。

** 创建表

mnesia:create_table(Name, Args).

Args:
{type, Type}, Type = set|ordered_set|bag
{disc_copies, NodeList}, %% 既有磁盘副本，又有内存副本
{ram_copies, NodeList},  %% 内存副本
{disc_only_copies, NodeList}, %% 只有磁盘副本，速度较慢。

要创建一个包含 erlang 记录 xxx 的表，可以使用{attributes, record_info(fields, xxx)}。

** 数据库查询

和 mysql 的查询很相似。

*** 获取表中所有数据

select * from table_name;

do(qlc:q([X||X <- mnesia:table(tableName)])).

使用 qlc:q 把查询编译成一种用于查询数据库的内部格式，最后给 do 去执行，返回结果。

*** 选择表里的字段数据

select field1, field2 from table_name;

do(qlc:q([X#table_name.filed1, X#table_name.filed2 || X <- mnesia:table(table_name)])),

*** 选择表里满足条件的数据

select field1 from table_name where filed2 > 250;

do(qlc:q([X#table_name.field1 || X <- mnesia:table(table_name),
                                 X#table_name.file2 > 250])).

** 添加和移除
*** 添加行
Row = #table{field1=Val1, field2=Val2},
F = fun() ->
            mnesia:write(Row)
    end,
mnesia:transaction(F).

*** 移除行

Row = {table, Field},
F = fun() ->
            mnesia:delete(Row)
    end,
mnesia:transaction(F).


** 事务 transaction
*** 优点：
| 可以通过函数执行多条语句； |
| 阻止并发访问数据库         |
*** 优点：
| 可以通过函数执行多条语句；       |
| 阻止并发访问数据库               |
| 悲观锁定，防止同时操作产生异常。 |
| 载入模块中的数据，保存复杂数据   |



** 使用图形化界面查看表
> observer:start().
但是需要一些配置.
在 reltool.config 中确保注释掉：
% {incl_cond, exclude},

** 几种读写操作
|mnesia:read/3 (read/1, wread/1)
|mnesia:write/3 (write/1, s_write/1)
 
