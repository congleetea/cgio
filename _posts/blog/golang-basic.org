#+TITLE:       Golang-的变量类型
#+AUTHOR:      congleetea
#+EMAIL:       congleetea@gmail.com
#+DATE:        2016-12-19 Mon
#+URI:         /blog/%y/%m/%d/go的变量类型
#+KEYWORDS:    golang,variables
#+TAGS:        go, points
#+LANGUAGE:    en
#+OPTIONS:     H:3 num:nil toc:nil \n:nil ::t |:t ^:nil -:nil f:t *:t <:t
#+DESCRIPTION: 记录Go的变量类型

* 关于类型
语言的变量类型是最基础的，而且各种语言的基本类型也是差不多的，但是也有各自的一些特殊的类型，这里只总结
这些特殊的类型和使用方法。

对于很多类型的很多东西可以使用时查询《Go语言编程这本书》

* Interface 类型和 Any类型
| [[http://qingkechina.blog.51cto.com/5552198/1675115][Go语言的接口类型]] |

这篇文章通过一个例子对interface在面向对象中的定义(*接口是用来限制实现类行为的*)做了解释，接着说明Go的
interface和面向对象的interface的不同点。

- Go的interface是类型
和array，string，int，struct等等一样，是一个类型，只是它通过一系列方法来对实例进行特性的描述(比如可以对
int型的数据添加实现加减乘除的方法，当然这些方法对string类型可能就没有必要了)。如果是empty interface， 
他就不会对实例进行任何的描述，正如此，所有的类型都可以实现interface{}，大家知道go在使用的时候对语言类
型要求特别高，所有变量对要规定好他的类型，但有时候你也不确定一个变量是什么类型的时候就可以使用interface{}
这个empty interface来表示。但是在使用的时候也需要确定这个interface{}的值到底是什么类型，这时候就需要进行
 *类型判断* , 根据得到的类型进行你想要的操作。类型判断有两种方式，一种是switch-type的方法，使用switch来
判断，另一种是是用 *反射reflect* 进行类型查询，即reflect.TypeOf(var)。 

- interface类型和struct
struct里面的成员是变量，而interface里面的成员是函数。
